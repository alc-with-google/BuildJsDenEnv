/*************
AGENDA
************/
{
    Separating the UI from the API
    Hosting providers
    Automated deployment
    Handling starter kit updates
    Inspiration
    Challenge
}

/*** Separating the UI from the API ***/
{
    1. Simple, low-risk, UI only deploys
    2. Separates concerns
        -   Separate teams
        -   Less to understand for new developers
        -   Scale back-end separately
    3. Cheap UI hosting
    4. Serve UI via a content delivery network
    5. Use the API tech you like
}

/*** Hosting Providers ***/
{
    Amamzon Web services
    Microsoft Azure
    Heroku-> for the API
    Firebase
    Google Cloud Platform
    //for static files
    Surge -> Static Files
    Github
    Netlify
}

/*** Automated API deploy to Heroku ***/
The UI is separated from the API
set up the API on jsDevEnvHeroku folder.

Use the heroku set up process for node.js.

/*** Deploy the app ***/
> heroku create
> heroku git:remote -a whispering-springs-68474 (where whispering-springs-68474 is the name of the app)
> git push heroku master

Edit base.urls in the api folder so that it hits the heroku api...
https://whispering-springs-68474.herokuapp.com/

Remove
{
    app.get('/users', function (req, res){
    res.json([
    {"id": 1, "firstName": "Matthew", "lastName":"oye", "email": "ml@gmail.com"},
    {"id": 2, "firstName": "Cornel", "lastName":"okon", "email": "co@gmail.com"},
    {"id": 3, "firstName": "Osita", "lastName":"Irene", "email": "oi@gmail.com"}
    ]);
});
}

in distServer.js so we hit our heroku app in production

/*** Deploy the app on surge ***/
> npm install

//in scripts
"deploy": "surge ./dist"

>npm run build
>npm run deploy (hit enter)

//available at free-airplane.surge.sh
